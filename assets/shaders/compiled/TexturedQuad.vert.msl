#include <metal_stdlib>
#include <metal_math>
#include <metal_texture>
using namespace metal;

#line 7 "TexturedQuad.vert.slang"
struct Output_0
{
    float2 TexCoord_0 [[user(TEXCOORD)]];
    float4 Position_0 [[position]];
};


#line 7
struct vertexInput_0
{
    float4 Position_1 [[attribute(0)]];
    float2 TexCoord_1 [[attribute(1)]];
};


#line 7
struct _MatrixStorage_float4x4_ColMajornatural_0
{
    array<float4, int(4)> data_0;
};


#line 7
struct UniformData_natural_0
{
    _MatrixStorage_float4x4_ColMajornatural_0 modelViewProjection_0;
};


#line 21
[[vertex]] Output_0 main_0(vertexInput_0 _S1 [[stage_in]], UniformData_natural_0 constant* ubo_0 [[buffer(0)]])
{
    thread Output_0 output_0;
    (&output_0)->TexCoord_0 = _S1.TexCoord_1;
    (&output_0)->Position_0 = (((_S1.Position_1) * (matrix<float,int(4),int(4)> (ubo_0->modelViewProjection_0.data_0[int(0)][int(0)], ubo_0->modelViewProjection_0.data_0[int(1)][int(0)], ubo_0->modelViewProjection_0.data_0[int(2)][int(0)], ubo_0->modelViewProjection_0.data_0[int(3)][int(0)], ubo_0->modelViewProjection_0.data_0[int(0)][int(1)], ubo_0->modelViewProjection_0.data_0[int(1)][int(1)], ubo_0->modelViewProjection_0.data_0[int(2)][int(1)], ubo_0->modelViewProjection_0.data_0[int(3)][int(1)], ubo_0->modelViewProjection_0.data_0[int(0)][int(2)], ubo_0->modelViewProjection_0.data_0[int(1)][int(2)], ubo_0->modelViewProjection_0.data_0[int(2)][int(2)], ubo_0->modelViewProjection_0.data_0[int(3)][int(2)], ubo_0->modelViewProjection_0.data_0[int(0)][int(3)], ubo_0->modelViewProjection_0.data_0[int(1)][int(3)], ubo_0->modelViewProjection_0.data_0[int(2)][int(3)], ubo_0->modelViewProjection_0.data_0[int(3)][int(3)]))));
    return output_0;
}

